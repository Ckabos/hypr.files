#!/usr/bin/env bash

# Script: caway
# Propósito:
# Muestra metadatos de música con playerctl y un ecualizador visual (cava) en Waybar.
# Autor original: https://github.com/hoaxdream/waybar-caway

# ==============================
# Configuración de traps para limpiar procesos hijos al salir
trap "trap - SIGTERM && kill -- -$$" SIGINT SIGTERM

# ==============================
# Configuración por defecto
BARS=8
FRAMERATE=60
EQUILIZER=1

# ==============================
# Parseo de opciones
while getopts 'b:f:eh' flag; do
    case "${flag}" in
        b) BARS="${OPTARG}" ;;
        f) FRAMERATE="${OPTARG}" ;;
        e) EQUILIZER=0 ;;
        h)
            echo "caway usage: caway [ options ... ]"
            echo "options:"
            echo "  -b <integer>  (Número de barras, default 8)"
            echo "  -f <integer>  (Framerate, default 60)"
            echo "  -e            (Desactiva ecualizador)"
            echo "  -h            (Muestra este mensaje)"
            exit 0
            ;;
    esac
done

# ==============================
# Configuración de barras ascii
bar="▁▂▃▄▅▆▇█"
dict="s/;//g;"

# Genera el diccionario sed para reemplazar números (0-7) por caracteres de barra
for ((i=0; i<${#bar}; i++)); do
    dict="${dict}s/$i/${bar:$i:1} /g;"
done

# Elimina el último thin space extra
dict="${dict}s/.$//;"

# ==============================
# Funciones utilitarias

clean_create_pipe() {
    if [ -p "$1" ]; then unlink "$1"; fi
    mkfifo "$1"
}

kill_pid_file() {
    if [[ -f "$1" ]]; then
        while read -r pid; do
            { kill "$pid" && wait "$pid"; } 2>/dev/null
        done < "$1"
    fi
}

# ==============================
# Pipes y archivos temporales
cava_waybar_pid="/tmp/cava_waybar_pid"
cava_waybar_pipe="/tmp/cava_waybar.fifo"
cava_waybar_config="/tmp/cava_waybar_config"
playerctl_waybar_pipe="/tmp/playerctl_waybar.fifo"

clean_create_pipe "$cava_waybar_pipe"
clean_create_pipe "$playerctl_waybar_pipe"

# ==============================
# Configuración de cava
cat > "$cava_waybar_config" <<EOF
[general]
mode = normal
framerate = $FRAMERATE
bars = $BARS

[output]
method = raw
raw_target = $cava_waybar_pipe
data_format = ascii
ascii_max_range = 7
EOF

# ==============================
# Ejecutar playerctl y enviar output al pipe
playerctl -a metadata --format '{"text": "{{artist}} - {{title}}", "tooltip": "{{playerName}} : {{markup_escape(artist)}} - {{markup_escape(title)}}", "alt": "{{status}}", "class": "{{status}}"}' -F > "$playerctl_waybar_pipe" &

# ==============================
# Loop principal: leer metadatos y actualizar ecualizador si es Playing
while read -r line; do
    kill_pid_file "$cava_waybar_pid"

    echo "$line" | jq --unbuffered --compact-output

    if [[ $EQUILIZER == 1 && $(echo "$line" | jq -r '.class') == 'Playing' ]]; then
        sleep 2

        cava -p "$cava_waybar_config" > "$cava_waybar_pipe" &
        echo $! > "$cava_waybar_pid"

        while read -r cmd2; do
            echo "$line" | jq --arg a "$(echo "$cmd2" | sed "$dict")" '.text = $a' --unbuffered --compact-output
        done < "$cava_waybar_pipe" &
        echo $! >> "$cava_waybar_pid"
    fi
done < "$playerctl_waybar_pipe"

